@model CodingAssignment.Models.StudentViewModel

<h2>Create Student</h2>

<form asp-action="Registration" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input asp-for="@Model.Id" class="form-control" hidden />
    <input value="@Model.CityId" id='hdncityid' class="form-control" hidden />
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="@Model.Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="@Model.Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Mobile"></label>
        <input asp-for="@Model.Mobile" class="form-control" />
        <span asp-validation-for="Mobile" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="StateId">Select State</label>
        <select id="stateDropdown" asp-for="@Model.StateId" class="form-control"
                asp-items="@(new SelectList(Model.States, "Id", "StateName",@Model.StateId))">
            <option value="">-- Select State --</option>
        </select>
        <span asp-validation-for="StateId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CityId">Select City</label>
        <select id="cityDropdown" asp-for="@Model.CityId" class="form-control">
            <option value="">-- Select City --</option>
        </select>
        <span asp-validation-for="CityId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="AboutYourself"></label>
        <textarea asp-for="@Model.AboutYourself" class="form-control"></textarea>
        <span asp-validation-for="AboutYourself" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Photo"></label>
           <br />
        @if (Model.Id > 0)
        {
            <img id="SelectedImageDiv" src="@Url.Content(@Model.PhotoPath)" alt="Student Photo" style="max-width: 100px; max-height: 100px;" />
        }
        else
        {
            <img id="SelectedImageDiv"  alt="Student Photo" style="max-width: 100px; max-height: 100px;" >
        }
           <br />
        <input asp-for="Photo" type="file" class="form-control-file" />
        <span asp-validation-for="Photo" id="photoError" class="text-danger"></span>
    </div>
    @if (Model.Id > 0)
    {
        <button type="submit" class="btn btn-primary">Update</button>
    }
    else
    {
        <button type="submit" class="btn btn-primary">Submit</button>
    }

</form>
<script>
    $(document).ready(function () {

           document.getElementById('Photo').addEventListener('change', function() {
        var file = this.files[0]; // Get the selected file
        if (file) {
            var reader = new FileReader(); // Create a FileReader object
            reader.onload = function(event) {
                $('#SelectedImageDiv').attr('src', event.target.result); // Set the src attribute of the image
                $('#SelectedImageDiv').show(); // Show the image
            };
            reader.readAsDataURL(file); // Read the file as a data URL
        }
    });

         $('#Photo').change(function() {
         var file = this.files[0];
            if (file) {
                var fileSize = file.size;
                var fileType = file.type;
                var allowedTypes = ['image/jpeg', 'image/png'];
                var maxSize = 250 * 1024; // 250 KB

                if (fileSize > maxSize) {
                    $('#photoError').text('File size should be less than 250 KB.');
                    $(this).val(''); // Clear input
                } else if (!allowedTypes.includes(fileType)) {
                    $('#photoError').text('Only JPG and PNG files are allowed.');
                    $(this).val(''); // Clear input
                } else {
                    $('#photoError').text(''); // Clear error message
                }
            }
    });



     BindCity( $("#stateDropdown").val());

        $('#stateDropdown').change(function () {
            var stateId = $(this).val();
            console.log(stateId);
            BindCity(stateId);
        });
    });

    function BindCity(stateId)
    {
        if(stateId>0)
        {
          $.ajax({
                url: `/student/GetCities?id=${stateId}`,
                type: 'GET',
                data: { stateId: stateId },
                success: function (data) {
                      console.log(data);
                    $('#cityDropdown').empty();
                    $('#cityDropdown').append($('<option>').val('').text('-- Select City --'));
                    $.each(data, function (index, city) {
                        if(city.id==$("#hdncityid").val())
                        {
                              $('#cityDropdown').append($('<option>').val(city.id).text(city.cityName).prop('selected', true));
                        }else
                        {
                            $('#cityDropdown').append($('<option>').val(city.id).text(city.cityName));
                        }
                    });
                }
            });
        }
    }
</script>